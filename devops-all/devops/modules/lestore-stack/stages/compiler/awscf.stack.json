{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "Description for devops compiler",

    "Parameters" : {
        "StackShortName" : {
            "Description" : "The Stage of this environment",
            "Type" : "String"
        },
        "InstanceType" : {
            "Description" : "Type of EC2 instance to launch",
            "Type" : "String",
            "Default" : "c1.medium",
            "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", 
            "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge"]
        },
        "SSHPort" : {
            "Description" : "The TCP port for the SSH",
            "Type" : "String",
            "Default" : "38022"
        },
        "WebServerPort" : {
            "Description" : "The TCP port for the Web Server",
            "Type" : "String",
            "Default" : "80"
        },
        "NRPEPort" : {
            "Description" : "The TCP port for NRPE Monitor",
            "Type" : "String",
            "Default" : "5666"
        },
        "KeyName" : {
            "Description" : "The EC2 Key Pair to allow SSH access to the instances",
            "Type" : "String",
            "Default" : "test_rsa",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern" : "[-_ a-zA-Z0-9\\.]*",
            "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
        },
        "DeployerSG" : {
            "Description" : "The SecurityGroup that can ssh to VMs",
            "Type" : "String",
            "Default" : "lestore-devops-deployer"
        },
        "MonitorSG" : {
            "Description" : "The SecurityGroup that can monitor VMs",
            "Type" : "String",
            "Default" : "lestore-devops-monitor"
        },
        "Deployer" : {
            "Description" : "Who create me?",
            "Type" : "String"
        },
        "Monitor" : {
            "Description" : "The address of NRPE Monitor",
            "Type" : "String",
            "Default" : "localhost"
        }
    },

    "Mappings" : {
        "AWSInstanceType2Arch" : {
            "t1.micro" : { "Arch" : "64" },
            "m1.small" : { "Arch" : "64" },
            "c1.medium" : { "Arch" : "64" }
        },
        "AWSRegionArch2AMI" : {
            "us-east-1" : { "64" : "ami-aecd60c7" },
			"us-west-1" : { "64" : "ami-7aba833f" },
            "us-west-2" : { "64" : "ami-48da5578" },
            "ap-southeast-1" : { "64" : "ami-b40d5ee6" },
            "ap-northeast-1" : { "64" : "ami-c9562fc8" }
        }
    },

    "Resources" : {
        "CfnUser" : {
            "Type" : "AWS::IAM::User",
            "Properties" : {
                "Path": "/",
                "Policies": [{
                    "PolicyName": "root",
                    "PolicyDocument": { "Statement":[{
                        "Effect":"Allow",
                        "Action":"cloudformation:DescribeStackResource",
                        "Resource":"*"
                    }]}
                }]
            }
        },

        "HostKeys" : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : {"Ref": "CfnUser"}
            }
        },

        "NewCompiler" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" }, { "Ref" : "DeployerSG" } ],
                "KeyName" : { "Ref" : "KeyName" },
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                "InstanceType" : { "Ref" : "InstanceType" },
                "Tags": [
                    { "Key" : "Name", "Value": {"Fn::Join" : [ "-",[
                                                   { "Ref" : "StackShortName" }, 
                                                   "compiler" 
                                                ]]}
                    },
                    { "Key" : "stack-status", "Value": "deploy" },
                    { "Key" : "lestore:apps", "Value": ",lestore-compiler," }
                ],
                "UserData" : { "Fn::Base64" : { 
                    "Fn::Join" : ["", [
                    "#!/bin/bash -v\n",
                    "\n",
                    "echo -n ", {"Ref" : "StackShortName"},"-Compiler > /home/ec2-user/nodename\n",
                    "#config ssh\n",
                    "cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orgbak\n",
                    "echo 'Port ", { "Ref" : "SSHPort" }, "' >> /etc/ssh/sshd_config\n",
                    "sudo bash -c 'echo Defaults:ec2-user \\!requiretty >> /etc/sudoers'\n",
                    "service sshd restart\n",
                    "#cfn-signal\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "# Helper function\n",
                    "function error_exit\n",
                    "{\n",
                    " /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "CompilerWaitHandle"}, "'\n",
                    " exit 1\n",
                    "}\n",
                    "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r NewCompiler ",
                    " --access-key ", { "Ref" : "HostKeys" },
                    " --secret-key ", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
                    " --region ", { "Ref" : "AWS::Region" }, " 2>&1 > cfninit.out || error_exit \"`cat cfninit.out`\"\n",
                    "# All is well so signal success\n",
                    "/opt/aws/bin/cfn-signal -e 0 -r \"NewCompiler setup complete\" '", {"Ref" : "CompilerWaitHandle" }, "'\n"
                        ]]
                }} 
            },

            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "dos2unix" : [],
                                "puppet" : [],
                                "make" : [],
                                "rpm-build" : [],
								"git" : []
                            }
                        }
                    }
                }
            }
        },
        "CompilerWaitHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "CompilerWaitCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "NewCompiler",
            "Properties" : {
                "Handle" : {"Ref" : "CompilerWaitHandle"},
                "Timeout" : "300"
            }
        },

        "InstanceSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable access",
                "SecurityGroupIngress" : [ {
                    "IpProtocol" : "tcp",
                    "FromPort" : { "Ref" : "SSHPort" },
                    "ToPort" : { "Ref" : "SSHPort" },
                    "SourceSecurityGroupName" : { "Ref" : "DeployerSG" }
                },{
                    "IpProtocol" : "tcp",
                    "FromPort" : { "Ref" : "NRPEPort" },
                    "ToPort" : { "Ref" : "NRPEPort" },
                    "SourceSecurityGroupName" : { "Ref" : "MonitorSG" }
                },{
                    "IpProtocol" : "tcp",
                    "FromPort" : { "Ref" : "WebServerPort" },
                    "ToPort" : { "Ref" : "WebServerPort" },
                    "CidrIp" : "0.0.0.0/0"
                }]
            }
        }
    },

    "Outputs" : {
        "StackShortName" : {
            "Description" : "The stage of this stack.",
            "Value" : { "Ref" : "StackShortName" }
        }
    }
}

